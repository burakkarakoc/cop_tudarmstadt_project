package boLang.test.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new TestSuite_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new assert_statement_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new execute_single_test_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new execute_tests_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new test_case_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xa09f958a0bb141e7L, 0x809fabcf941b13ebL, 0x175473f5555f802cL), MetaIdFactory.conceptId(0xa09f958a0bb141e7L, 0x809fabcf941b13ebL, 0x175473f5556778beL), MetaIdFactory.conceptId(0xa09f958a0bb141e7L, 0x809fabcf941b13ebL, 0x648c1dc380d824f7L), MetaIdFactory.conceptId(0xa09f958a0bb141e7L, 0x809fabcf941b13ebL, 0x648c1dc380d6939cL), MetaIdFactory.conceptId(0xa09f958a0bb141e7L, 0x809fabcf941b13ebL, 0x175473f5555f802fL)).seal();
}
