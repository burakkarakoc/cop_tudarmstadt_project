package boLang.test.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_TestSuite;
  private ConceptPresentation props_assert_statement;
  private ConceptPresentation props_execute_single_test;
  private ConceptPresentation props_execute_tests;
  private ConceptPresentation props_test_case;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.TestSuite:
        if (props_TestSuite == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_TestSuite = cpb.create();
        }
        return props_TestSuite;
      case LanguageConceptSwitch.assert_statement:
        if (props_assert_statement == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_assert_statement = cpb.create();
        }
        return props_assert_statement;
      case LanguageConceptSwitch.execute_single_test:
        if (props_execute_single_test == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_execute_single_test = cpb.create();
        }
        return props_execute_single_test;
      case LanguageConceptSwitch.execute_tests:
        if (props_execute_tests == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_execute_tests = cpb.create();
        }
        return props_execute_tests;
      case LanguageConceptSwitch.test_case:
        if (props_test_case == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_test_case = cpb.create();
        }
        return props_test_case;
    }
    return null;
  }
}
