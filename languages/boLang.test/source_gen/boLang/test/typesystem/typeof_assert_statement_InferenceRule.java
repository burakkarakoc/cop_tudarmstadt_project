package boLang.test.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.builder.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class typeof_assert_statement_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_assert_statement_InferenceRule() {
  }
  public void applyRule(final SNode assert_statement, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(assert_statement, LINKS.expr$2m3V);
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:3b0441ac-60ef-4769-803c-6ccd4a8853d3(boLang.test.typesystem)", "1681096058453721303", 0, null);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:3b0441ac-60ef-4769-803c-6ccd4a8853d3(boLang.test.typesystem)", "1681096058453717846", true), (SNode) createboolean_type_ym01p9_a1a0c0a0b(), _info_12389875345);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.assert_statement$Y8;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static SNode createboolean_type_ym01p9_a1a0c0a0b() {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.boolean_type$UQ);
    return n0.getResult();
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink expr$2m3V = MetaAdapterFactory.getContainmentLink(0xa09f958a0bb141e7L, 0x809fabcf941b13ebL, 0x175473f5556778beL, 0x175473f5556778c1L, "expr");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept assert_statement$Y8 = MetaAdapterFactory.getConcept(0xa09f958a0bb141e7L, 0x809fabcf941b13ebL, 0x175473f5556778beL, "boLang.test.structure.assert_statement");
    /*package*/ static final SConcept boolean_type$UQ = MetaAdapterFactory.getConcept(0x69cdfdddbb404ec3L, 0x88aa7abaa38e4365L, 0x2b4489835fc2b1eL, "boLang.structure.boolean_type");
  }
}
