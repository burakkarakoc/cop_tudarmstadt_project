<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <uses language="l:f3061a53-9226-4cc5-a443-f952ceaf5816:jetbrains.mps.baseLanguage" />
  <uses language="l:83888646-71ce-4f1c-9c53-c54016f6ad4f:jetbrains.mps.baseLanguage.collections" />
  <uses language="l:df345b11-b8c7-4213-ac66-48d2a9b75d88:jetbrains.mps.baseLanguageInternal" />
  <uses language="l:3a13115c-633c-4c5c-bbcc-75c4219e9555:jetbrains.mps.lang.quotation" />
  <uses language="l:7866978e-a0f0-4cc7-81bc-4d213d9375e1:jetbrains.mps.lang.smodel" />
  <uses language="l:7a5dda62-9140-4668-ab76-d5ed1746f2b2:jetbrains.mps.lang.typesystem" />
  <uses module="3f233e7f-b8a6-46d2-a57f-795d56775243(Annotations)" kind="dp" />
  <uses module="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" kind="rt+dp" />
  <uses module="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea(MPS.Core)" kind="rt+dp" />
  <uses module="8865b7a8-5271-43d3-884c-6fd1d9cfdd34(MPS.OpenAPI)" kind="dp" />
  <uses module="69cdfddd-bb40-4ec3-88aa-7abaa38e4365(boLang)" kind="dp" />
  <uses module="4c6a28d1-2c60-478d-b36e-db9b3cbb21fb(closures.runtime)" kind="rt" />
  <uses module="9b80526e-f0bf-4992-bdf5-cee39c1833f3(collections.runtime)" kind="rt+dp" />
  <uses module="f3061a53-9226-4cc5-a443-f952ceaf5816(jetbrains.mps.baseLanguage)" kind="dp" />
  <uses module="fd392034-7849-419d-9071-12563d152375(jetbrains.mps.baseLanguage.closures)" kind="dp" />
  <uses module="83888646-71ce-4f1c-9c53-c54016f6ad4f(jetbrains.mps.baseLanguage.collections)" kind="dp" />
  <uses module="52b81ac7-93fd-4e9e-b972-4995882da6d4(jetbrains.mps.baseLanguage.references.runtime)" kind="rt" />
  <uses module="e39e4a59-8cb6-498e-860e-8fa8361c0d90(jetbrains.mps.baseLanguage.scopes)" kind="dp" />
  <uses module="2d3c70e9-aab2-4870-8d8d-6036800e4103(jetbrains.mps.kernel)" kind="dp" />
  <uses module="d936855b-48da-4812-a8a0-2bfddd633ac5(jetbrains.mps.lang.behavior.api)" kind="rt+dp" />
  <uses module="d936855b-48da-4812-a8a0-2bfddd633ac4(jetbrains.mps.lang.behavior.runtime)" kind="rt" />
  <uses module="ceab5195-25ea-4f22-9b92-103b95ca8c0c(jetbrains.mps.lang.core)" kind="dp" />
  <uses module="446c26eb-2b7b-4bf0-9b35-f83fa582753e(jetbrains.mps.lang.modelapi)" kind="dp" />
  <uses module="d7eb0a2a-bd50-4576-beae-e4a89db35f20(jetbrains.mps.lang.scopes.runtime)" kind="dp" />
  <uses module="7866978e-a0f0-4cc7-81bc-4d213d9375e1(jetbrains.mps.lang.smodel)" kind="dp" />
  <uses module="c72da2b9-7cce-4447-8389-f407dc1158b7(jetbrains.mps.lang.structure)" kind="dp" />
  <uses module="9ded098b-ad6a-4657-bfd9-48636cfe8bc3(jetbrains.mps.lang.traceable)" kind="dp" />
  <uses module="7a5dda62-9140-4668-ab76-d5ed1746f2b2(jetbrains.mps.lang.typesystem)" kind="dp" />
  <uses module="9a4afe51-f114-4595-b5df-048ce3c596be(jetbrains.mps.runtime)" kind="rt+dp" />
  <dependency className="boLang.typesystem.TypesystemDescriptor">
    <classNode dependClassName="boLang.typesystem.check_duplicate_NonTypesystemRule" />
    <classNode dependClassName="boLang.typesystem.typeof_binary_expression_InferenceRule" />
    <classNode dependClassName="boLang.typesystem.typeof_for_loop_InferenceRule" />
    <classNode dependClassName="boLang.typesystem.typeof_number_literal_InferenceRule" />
    <classNode dependClassName="boLang.typesystem.typeof_string_literal_InferenceRule" />
    <classNode dependClassName="boLang.typesystem.typeof_variable_referance_InferenceRule" />
    <classNode dependClassName="boLang.typesystem.typeof_variables_InferenceRule" />
    <classNode dependClassName="boLang.typesystem.typeof_while_loop_InferenceRule" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.errors.IRuleConflictWarningProducer" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.OverloadedOperationsTypesProvider" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.OverloadedOpsProvider_OneTypeSpecified" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.smodel.builder.SNodeBuilder" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.BaseHelginsDescriptor" />
  </dependency>
  <dependency className="boLang.typesystem.check_duplicate_NonTypesystemRule">
    <classNode dependClassName="boLang.behavior.statement_container__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SInterfaceConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SProperty" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="boLang.typesystem.typeof_binary_expression_InferenceRule">
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.IRuleConflictWarningProducer" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.smodel.builder.SNodeBuilder" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SContainmentLink" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SProperty" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="boLang.typesystem.typeof_for_loop_InferenceRule">
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="boLang.typesystem.typeof_number_literal_InferenceRule">
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="boLang.typesystem.typeof_string_literal_InferenceRule">
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="boLang.typesystem.typeof_variable_referance_InferenceRule">
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SReferenceLink" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="boLang.typesystem.typeof_variables_InferenceRule">
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SContainmentLink" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="boLang.typesystem.typeof_while_loop_InferenceRule">
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.smodel.builder.SNodeBuilder" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SContainmentLink" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
</dependenciesRoot>

